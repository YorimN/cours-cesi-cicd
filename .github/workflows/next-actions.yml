name: next-actions
run-name: ${{ github.actor }} next actions
on: [push]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image

        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ghcr.io/yorimn/cours-cesi-cicd/:latest

  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Cache dependencies
  #       uses: actions/cache@v3
  #       with:
  #         path: |
  #           node_modules
  #           /home/runner/.cache/Cypress
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

  #     - name: Install dependencies
  #       run: npm install

  #     - name: Set up SSH
  #       uses: webfactory/ssh-agent@v0.8.0
  #       with:
  #         ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

  #     - name: SSH into EC2 instance
  #       run: |
  #         ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_NAME }}@${{ secrets.SSH_HOST }} "ls && cd cours-cesi-cicd && git pull && npm install && npm run build && pm2 restart all"

  # - name: Install pm2
  #   run:
  #   run: npm install pm2 -g
  # - name: Build project
  #   run: npm run build
  # - name: Start project
  #   run: pm2 start npm -- start

  # test:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/cache@v3
  #       with:
  #         path: |
  #           node_modules
  #           /home/runner/.cache/cypress
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
  #     - run: npx cypress install
  #     - run: npm run e2e:headless
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: e2e-video
  #         path: cypress/videos/
